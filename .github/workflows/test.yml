name: test

on:
  push:
    branches:
      - master
      - packagecloud
      - 'release-*'
    tags-ignore:
      - 'debian/*'
      - '*-start'
  pull_request:
    branches:
      - '*'
  schedule:
      - cron:  '0 12 * * 0'

jobs:

  test:

    name: PostgreSQL ${{ matrix.pg }}, PostGIS ${{ matrix.pgis }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
        fail-fast: false
        matrix:
            # Combines <https://trac.osgeo.org/postgis/wiki/UsersWikiPostgreSQLPostGIS> and
            # `curl https://apt.postgresql.org/pub/repos/apt/dists/bionic-pgdg/main/binary-amd64/Packages | grep --only-matching '^Package: postgresql-[0-9.]\+-postgis-[0-9.]\+$' | sort --version-sort`.
            include:
                -   os: ubuntu-18.04
                    pg: '10'
                    pgis: '2.4'
                -   os: ubuntu-18.04
                    pg: '10'
                    pgis: '2.5'
                -   os: ubuntu-18.04
                    pg: '10'
                    pgis: '3'
                -   os: ubuntu-18.04
                    pg: '12'
                    pgis: '2.5'
                -   os: ubuntu-18.04
                    pg: '12'
                    pgis: '3'
    env:
      # Set PATH as postgresql-server-dev-all pretends version is 11
      PATH: /usr/lib/postgresql/${{ matrix.pg }}/bin:/bin:/usr/bin:/usr/local/bin
      APT: "apt-get -o Dpkg::Progress=0 -o Dpkg::Use-Pty=0"
    steps:
    - uses: actions/checkout@v1
    - name: Install dependencies
      run: |
        sudo ${APT} -qq purge \
            libpq* \
            *php* \
            postgresql*
        sudo rm -rf /var/lib/postgresql
        sudo ${APT} -qq install curl ca-certificates gnupg
        distro=`lsb_release -cs`
        # Enable fetching packages from apt.postgresql repository
        curl -s https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        echo "deb http://apt.postgresql.org/pub/repos/apt/ ${distro}-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
        # Enable fetching packages from packagecloud test repository
        curl -Ls https://packagecloud.io/linz/test/gpgkey | sudo apt-key add -
        echo "deb https://packagecloud.io/linz/test/ubuntu ${distro} main" | sudo tee /etc/apt/sources.list.d/linz-test.list
        # Enable fetching packages from packagecloud prod repository
        curl -Ls https://packagecloud.io/linz/prod/gpgkey | sudo apt-key add -
        echo "deb https://packagecloud.io/linz/prod/ubuntu ${distro} main" | sudo tee /etc/apt/sources.list.d/linz-prod.list
        # Update apt cache
        sudo ${APT} -qq update
        # Install dependencies
        sudo ${APT} -qq install --no-install-recommends \
            postgresql-client-${{ matrix.pg }} \
            postgresql-contrib-${{ matrix.pg }} \
            postgresql-${{ matrix.pg }} \
            postgresql-${{ matrix.pg }}-dbpatch \
            postgresql-${{ matrix.pg }}-pgtap \
            postgresql-${{ matrix.pg }}-postgis-${{ matrix.pgis }} \
            postgresql-${{ matrix.pg }}-postgis-${{ matrix.pgis }}-scripts \
            postgresql-${{ matrix.pg }}-tableversion \
            postgresql-server-dev-${{ matrix.pg }} \
            libtap-parser-sourcehandler-pgtap-perl \
            debhelper \
            fakeroot \
            linz-bde-schema \
            linz-bde-uploader
    - name: Setup PostgreSQL user
      run: |
        sudo -u postgres createuser -s "$USER"
        sudo -u postgres createuser -s root
    - name: Build
      run: |
        # Build
        make
    - name: Test build
      run: |
        # Pre-install tests
        make check || { cat regression.diffs; false; }
    - name: Install
      run: |
        sudo -E make install
    - name: Test installation
      run: |
        # Post-install tests
        make installcheck
        make installcheck-stdout
    - name: Test uninstall
      run: |
        make uninstall
    - name: Test docs building
      run: |
        xvfb-run make docs
    - name: Test packaging
      run: |
        make deb
        sudo dpkg -i ../linz-lds-bde-schema*.deb
    - name: Test upgrades
      run: |
        test/test-upgrades.sh
    - name: Test publication
      run: |
        make check-publisher
      if: matrix.pg >= 10

  package:
    needs: test
    name: Package for Debian
    runs-on: ubuntu-18.04
    strategy:
        matrix:
            distro: [ 'bionic' ]
    steps:
    - uses: actions/checkout@v1

    - name: Determine packagecloud publication target
      run: |
        # TODO: it would be nice to turn this into a single-liner in
        #       github-action syntax
        echo "GitHub ref: ${{ github.ref }}"
        echo "GitHub event_name: ${{ github.event_name }}"
        PACKAGECLOUD_REPOSITORY=
        if test "${{ github.event_name }}" = 'push'; then
          if expr "${{ github.ref }}" : "refs/tags/" > /dev/null; then
            PACKAGECLOUD_REPOSITORY=test
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY
          elif test "${{ github.ref }}" = 'refs/heads/packagecloud' \
                 -o "${{ github.ref }}" = 'refs/heads/master'
          then
            PACKAGECLOUD_REPOSITORY=dev
          fi
        fi
        echo "PACKAGECLOUD_REPOSITORY=$PACKAGECLOUD_REPOSITORY" | tee -a $GITHUB_ENV

    - uses: linz/linz-software-repository@v4
      with:
        packagecloud_token: ${{ secrets.LINZCI_PACKAGECLOUD_TOKEN }}
        packagecloud_repository: ${{ env.PACKAGECLOUD_REPOSITORY }}
