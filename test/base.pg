\set ECHO none
--------------------------------------------------------------------------------
--
-- Copyright 2016 Crown copyright (c)
-- Land Information New Zealand and the New Zealand Government.
-- All rights reserved
--
-- This software is released under the terms of the new BSD license. See the
-- LICENSE file for more information.
--
--------------------------------------------------------------------------------
-- Provide unit testing for LINZ LDS BDE SCHEMA using pgTAP
--------------------------------------------------------------------------------
\set QUIET true
\set VERBOSITY terse
\pset format unaligned
\pset tuples_only true

SET client_min_messages TO WARNING;

CREATE EXTENSION unaccent;

\i sql/01-lds_layer_tables.sql
\i sql/02-lds_bde_schema_index.sql
\i sql/04-lds_layer_functions.sql
\i sql/05-bde_ext_schema.sql
\i sql/06-bde_ext_functions.sql
\i sql/07-lds_version.sql
\i sql/90-patches.sql

BEGIN;

CREATE EXTENSION pgtap SCHEMA public;

SELECT * FROM no_plan();

\i test/base-schema.pg.inc

-- Test versioning {

CREATE FUNCTION pg_temp.check_versioned(tab name, versioned bool)
RETURNS text AS $$
  SELECT
  CASE
    WHEN versioned THEN
      ok(table_version.ver_is_table_versioned('lds', tab),
        'Table ' || tab || ' should be versioned')
    ELSE
      ok(not table_version.ver_is_table_versioned('lds', tab),
        'Table ' || tab || ' should not be versioned')
  END;
$$ LANGUAGE sql;

CREATE TEMPORARY TABLE lds_tables (nam) AS VALUES
('affected_parcel_surveys'),
('affected_parcel_surveys_pend'),
('all_linear_parcels'),
('all_parcels'),
('all_parcels_pend'),
('cadastral_adjustments'),
('geodetic_antarctic_vertical_marks'),
('geodetic_antarctic_marks'),
('geodetic_marks'),
('geodetic_network_marks'),
('geodetic_vertical_marks'),
('hydro_parcels'),
('land_districts'),
('land_parcels'),
('mesh_blocks'),
('non_primary_linear_parcels'),
('non_primary_parcels'),
('parcel_stat_actions'),
('parcel_vectors'),
('primary_parcels'),
('railway_centre_line'),
('road_centre_line'),
('road_centre_line_subsection'),
('road_parcels'),
('spi_adjustments'),
('strata_parcels'),
('street_address'),
('street_address2'),
('survey_arc_observations'),
('survey_bdy_marks'),
('survey_network_marks'),
('survey_non_bdy_marks'),
('survey_observations'),
('survey_plans'),
('survey_protected_marks'),
('title_estates'),
('title_memorial_additional_text'),
('title_memorials'),
('title_owners'),
('title_owners_aspatial'),
('title_parcel_associations'),
('titles'),
('titles_aspatial'),
('titles_plus'),
('waca_adjustments')
;

-- Table X should not be versioned
SELECT pg_temp.check_versioned(nam, false) from pg_temp.lds_tables;

\i sql/versioning/01-version_tables.sql

-- Table X should be versioned
SELECT pg_temp.check_versioned(nam, true) from pg_temp.lds_tables;

\i test/base-revision-tables.pg.inc

-- }

-- Test lds_deg_dms {

SELECT results_eq($$
    SELECT lds.lds_deg_dms(x,2,'ab')::text
    FROM ( VALUES
        (3),(-3),
        (180),(-180)
    ) t(x)
$$, $$ VALUES
    ('3째00''00.00" b'),('-3째00''00.00" a'),
    ('180째00''00.00" b'),('-180째00''00.00" a')
$$, 'lds_deg_dms behaves as expected');

-- }

-- Test lds.LDS_MaintainSimplifiedLayers {

-- Pretend an upload run 1234 is in progress
CREATE SCHEMA bde_upload_1234;
CREATE TABLE bde_upload_1234._options
    ( option name primary key, value text );

GRANT USAGE on SCHEMA bde_upload_1234 TO bde_dba;
GRANT SELECT on TABLE bde_upload_1234._options TO bde_dba;

INSERT INTO bde_upload_1234._options VALUES
    ('_dataset', 'testsuite1');

-- Pretend every table was always affected
CREATE OR REPLACE FUNCTION bde_control.bde_TablesAffected(int, text[], text)
  RETURNS bool AS 'SELECT true' LANGUAGE 'sql';
--CREATE OR REPLACE FUNCTION LDS.LDS_TableHasData(text, text)
--  RETURNS bool AS 'SELECT true' LANGUAGE 'sql';

-- TODO: add some actual record in the source tables
--       for simplified tables to be non-empty or
--       operations will be skiped

-- Switch to unprivileged role
-- See https://github.com/linz/linz-lds-bde-schema/issues/64
DO $$
BEGIN
    IF NOT EXISTS (SELECT * FROM pg_roles
                   WHERE rolname = 'linz_lds_bde_schema_test_role')
    THEN
        CREATE ROLE linz_lds_bde_schema_test_role
            NOSUPERUSER CREATEDB CREATEROLE;
		GRANT USAGE ON SCHEMA lds TO linz_lds_bde_schema_test_role;
		GRANT USAGE ON SCHEMA bde_ext TO linz_lds_bde_schema_test_role;
    END IF;

    SET session_authorization TO linz_lds_bde_schema_test_role;
END $$;

SELECT is(lds.LDS_MaintainSimplifiedLayers(1234), 1,
	'LDS_MaintainSimplifiedLayers(1234) succeeds');

SELECT is(bde_ext.LDS_MaintainAllFBDELayers(1234), 1,
	'LDS_MaintainAllFBDELayers (1234) succeeds');

-- Switch back
RESET SESSION AUTHORIZATION;

-- }

SELECT * FROM finish();

ROLLBACK;

